Option Explicit
Public Function NChooseK(ByVal Factorn As Long, ByVal Factorc As Long) As Single
    Dim result As Double
    Dim cnt As Long
    Dim diffact As Long
    diffact = Factorn - Factorc
    result = 1
    For cnt = Factorc To 1 Step -1
        result = result * ((diffact / cnt) + 1)
        'result = result / cnt
    Next cnt
    NChooseK = result
End Function
Function EM(n As Long, support As Range, vararray As Range) As Double
With Application
    .Calculation = xlCalculationManual
    .ScreenUpdating = False
    .DisplayStatusBar = False
    .AskToUpdateLinks = False
    .EnableEvents = False
    .Cursor = xlWait
    .EnableCancelKey = xlErrorHandler
End With
ActiveSheet.DisplayPageBreaks = False

Dim StartTime As Double
Dim TimeElapsed As Double
StartTime = Timer

Dim omgh As Double, omgi As Double, omg7 As Double, omgb As Double, omgg As Double, omgt As Double, Finaltotal As Double, Total As Double, Subsubtotal As Double
Dim d As Long, datanumr As Long, datanum As Long, omg As Long, omg3 As Long, K As Long, omgs2 As Long, omgs1 As Long, L As Long, omg5 As Long, omge As Long, a As Long, j As Long, omg8 As Long, omgc As Double, I As Long, Y As Long, E As Long, C As Long, H As Long, G As Long, F As Long

Dim img1 As Long, img2 As Long

d = vararray.Columns.Count
datanumr = vararray.Rows.Count
datanum = datanumr - 1

img1 = (n + 1)
omg = (img1) ^ d
img2 = omg * img1
omg3 = datanum + 1

Dim testarray() As Long
ReDim Preserve testarray(1 To omg, 1 To d)
Dim testvararray() As Double
ReDim Preserve testvararray(1 To omg3, 1 To d * omg)
Dim functionarray() As Double
ReDim Preserve functionarray(1 To omg)
Dim functionvararray() As Double
ReDim Preserve functionvararray(1 To omg, 1 To d)

For K = 1 To omg
    omgs2 = 1
    omgs1 = 1
        For L = 1 To d
            'omg1 = d - L
            omg5 = img2 * img1 ^ (-L)
            omge = K Mod omg5
            omgi = (omge / omg5) - 1
            omgh = (omge * (img1) ^ (L)) / (omg)
            
            If Not (omge = 0) = True Then
                a = 0
                Do
                If Not (a < omgh) = True Then
                        omgs1 = 0
                Else
                    omgs1 = 1
                If omgs1 = 1 Then
                            If Not (omgi <= a) = True Then
                                omgs2 = 0
                            Else
                                omgs2 = 1
                            End If
                End If
                testarray(K, L) = a
                End If
                a = a + 1
                Loop While (omgs1 * omgs2) = 1
            Else
                testarray(K, L) = n
            End If
        Next L
    Next K
    For j = 1 To d
        omg7 = 1 / ((support(1, j) - support(2, j)) ^ n)
        omg8 = (j - 1) * omg
        omgb = support(2, j)
        omgc = support(1, j)
        For I = 1 To (omg3)
            omgg = omg7 * (omgc - vararray(I, j)) ^ n
            omgt = (vararray(I, j) - omgb) / (omgc - vararray(I, j))
            For Y = 1 To omg
            testvararray(I, (Y + omg8)) = (NChooseK(n, testarray(Y, j)) * ((((omgt) ^ testarray(Y, j)) * omgg)))
            Next Y
        Next I
    Next j
    For E = 1 To omg
        For C = 1 To d
            functionvararray(E, C) = support(2, C) + ((testarray(E, C) * (support(1, C) - support(2, C))) / n)
        Next C
    Next E
Finaltotal = 0
    For H = 1 To omg
Total = 0
    For G = 1 To omg3
            Subsubtotal = 1
                For F = 1 To d
                Subsubtotal = Subsubtotal * testvararray(G, (H + ((F - 1) * omg)))
                Next F
        Total = Total + Subsubtotal
    Next G
Finaltotal = Finaltotal + (Total * (functionvararray(H, 1) * functionvararray(H, 2) * functionvararray(H, 3)) ^ (3 / 5))
    Next H
EM = Finaltotal / omg3
  TimeElapsed = Timer - StartTime
Debug.Print TimeElapsed
With Application
    .EnableCancelKey = xlErrorHandler
    .Cursor = xlDefault
    .Calculation = xlCalculationAutomatic
    .ScreenUpdating = True
    .DisplayStatusBar = True
    .AskToUpdateLinks = True
    .EnableEvents = True
End With
ActiveSheet.DisplayPageBreaks = True
End Function

'' Copyright, Matthew Miller, All Rights Reserved.