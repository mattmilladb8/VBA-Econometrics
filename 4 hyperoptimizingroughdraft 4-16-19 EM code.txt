Option Explicit
Public Function NChooseK(ByVal Factorn As Long, ByVal Factorc As Long) As Single
    Dim result As Double
    Dim cnt As Long
    Dim diffact As Long
    diffact = Factorn - Factorc
    result = 1
    For cnt = Factorc To 1 Step -1
        result = result * (diffact + cnt)
        result = result / cnt
    Next cnt
    NChooseK = result
End Function
Function EM(n As Long, support As Range, vararray As Range) As Double
With Application
    .Calculation = xlCalculationManual
    .ScreenUpdating = False
    .DisplayStatusBar = False
    .AskToUpdateLinks = False
    .EnableEvents = False
    '.Cursor = xlWait
    '.EnableCancelKey = xlErrorHandler
End With
ActiveSheet.DisplayPageBreaks = False
Dim StartTime As Double
Dim TimeElapsed As Double
StartTime = Timer

Dim K As Long, L As Long, A As Long, I As Long, j As Long
Dim d As Long, datanum As Long, omg0 As Long, omg As Long, omg3 As Long
Dim omg1 As Long, omg5 As Long, omg7 As Double
Dim datanumr As Long, divbyn As Double, divbyomg3 As Double, omge As Long, omgf As Double, omgh As Double, omgi As Double
Dim Total As Double, Subsubtotal As Double, Subtotal As Double, omgs1 As Long, omgs2 As Long
'Dim omgt As Double, omgg As Double

d = vararray.Columns.Count
datanumr = vararray.Rows.Count
datanum = datanumr - 1
omg0 = n + 1
omg = omg0 ^ d
omg3 = datanum + 1
divbyn = 1 / n
divbyomg3 = 1 / omg3


Dim testarray() As Long
ReDim Preserve testarray(1 To d)
Dim functionarray() As Double
ReDim Preserve functionarray(1 To omg)
Dim functionvararray() As Double
ReDim Preserve functionvararray(1 To d)
Dim Finaltotal As Double

Finaltotal = 0
For K = 1 To omg
Total = 0
For I = 1 To omg3
            omgs2 = 1
            omgs1 = 1
        Subsubtotal = 1
        For L = 1 To d
            omg1 = d - L
            omg5 = omg0 ^ (omg1 + 1)
            omge = K Mod omg5
            omgh = omge / (omg0 ^ omg1)
            omgi = (omge / omg5) - 1
            
            If Not (omge = 0) = True Then
                A = 0
                Do
                If Not (A < omgh) = True Then
                        omgs1 = 0
                Else
                    omgs1 = 1
                If omgs1 = 1 Then
                            If Not (omgi <= A) = True Then
                                omgs2 = 0
                            Else
                                omgs2 = 1
                            End If
                End If
                testarray(L) = A
                End If
                A = A + 1
                Loop While (omgs1 * omgs2) = 1
            Else
                testarray(L) = n
            End If
            Subsubtotal = Subsubtotal * (NChooseK(n, testarray(L)) * (((((vararray(I, L) - support(2, L)) / (support(1, L) - vararray(I, L))) ^ testarray(L)) * (((support(1, L) - vararray(I, L)) / ((support(1, L) - support(2, L)))) ^ n))))
            functionvararray(L) = support(2, L) + ((testarray(L) * (support(1, L) - support(2, L))) * divbyn)
        Next L
Total = Total + Subsubtotal
Next I

functionarray(K) = (functionvararray(1) * functionvararray(2) * functionvararray(3)) ^ (3 / 5)
Finaltotal = Finaltotal + (Total * functionarray(K))
Next K
EM = Finaltotal * divbyomg3
    
TimeElapsed = Timer - StartTime
Debug.Print TimeElapsed
With Application
    '.EnableCancelKey = xlErrorHandler
    '.Cursor = xlDefault
    .Calculation = xlCalculationAutomatic
    .ScreenUpdating = True
    .DisplayStatusBar = True
    .AskToUpdateLinks = True
    .EnableEvents = True
End With
ActiveSheet.DisplayPageBreaks = True
End Function

'' Copyright, Matthew Miller, All Rights Reserved.